<!-- Specific Item Styles -->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:dynamic="clr-namespace:SMM.Services.DynamicXAML">


    <!-- This file contains styles for specific UI elements in
         the Mystery in the Stars project.
         This includes buttons, text boxes, and other shapes
         that will be reused throughout the UI. -->
    
    <!-- - - - - - - - - - - - - - - - - - - -->
    <!--       Always-Applicable Styles      -->
    <!-- - - - - - - - - - - - - - - - - - - -->

    <Style x:Key="DarkTheme" TargetType="{x:Type Window}">
        <Setter Property="Background" Value="{StaticResource SMMBackgroundDark}"/>
        <Setter Property="Foreground" Value="{StaticResource SMMWhite}"/>
    </Style>

    <Style x:Key="LightTheme" TargetType="{x:Type Window}">
        <Setter Property="Background" Value="{StaticResource SMMWhite}"/>
        <Setter Property="Foreground" Value="{StaticResource SMMBlack}"/>
    </Style>

    <!-- - - - - - - - - - - - - -->
    <!--       Other Styles      -->
    <!-- - - - - - - - - - - - - -->

    <!-- Standard styled ControlTemplate with "cut" corners -->
    <ControlTemplate x:Key="CornerCutTemplate" TargetType="{x:Type ContentControl}">
        <Grid>
            <Viewbox Stretch="Fill">
                <Canvas Width="100" Height="30">
                    <Path
                        Fill="{TemplateBinding Background}"
                        Stroke="{StaticResource SMMLightGray}"
                        StrokeThickness="1"
                        Data="{dynamic:CornerCut}" />
                </Canvas>
            </Viewbox>
            <ContentPresenter
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                RecognizesAccessKey="True" />
        </Grid>
    </ControlTemplate>
    
    <!-- Base style for cut corner objects -->
    <Style x:Key="CornerCutBase" TargetType="{x:Type Control}">
        <Setter Property="Template" Value="{StaticResource CornerCutTemplate}" />
        <Setter Property="FontSize" Value="{dynamic:FontScale 1}"/>
        <Setter Property="FontFamily" Value="{StaticResource BodyFont}" />
        <Setter Property="Foreground" Value="{StaticResource SMMBlack}" />
        <Setter Property="Background" Value="{StaticResource SMMYellow}" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>

    <!-- Standard styled button with cut corners -->
    <Style x:Key="CornerCutButton" TargetType="{x:Type Button}" BasedOn="{StaticResource CornerCutBase}">
        <Setter Property="Height" Value="{dynamic:AspectRatio 0.33}"/>
        <Setter Property="Cursor" Value="Hand" />
    </Style>

    <!-- Standard styled label with cut corners -->
    <Style x:Key="CornerCutLabel" TargetType="{x:Type Label}" BasedOn="{StaticResource CornerCutBase}">
        <Setter Property="Height" Value="{dynamic:AspectRatio 0.25}"/>
        <Setter Property="FontSize" Value="{dynamic:FontScale 1.2}"/>
    </Style>

    <!-- Button container for a clue image -->
    <Style x:Key="ClueImageButton" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Background" Value="{StaticResource SMMTransparent}" />
        <Setter Property="BorderBrush" Value="{StaticResource SMMTransparent}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Body Text (Labels) -->
    <Style x:Key="BodyTextLabel" TargetType="{x:Type Label}" BasedOn="{x:Null}">
        <Setter Property="FontFamily" Value="{StaticResource BodyFont}" />
        <Setter Property="Foreground" Value="{StaticResource SMMBlack}" />
        <Setter Property="FontSize" Value="{dynamic:FontScale 1}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <!-- Body Text (TextBlocks) -->
    <Style x:Key="BodyTextBlock" TargetType="{x:Type TextBlock}" BasedOn="{x:Null}">
        <Setter Property="FontFamily" Value="{StaticResource BodyFont}" />
        <Setter Property="Foreground" Value="{StaticResource SMMYellow}" />
        <Setter Property="FontSize" Value="{dynamic:FontScale 1}"/>
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <!-- Screen header/title -->
    <Style x:Key="ScreenHeader" TargetType="{x:Type Label}" BasedOn="{StaticResource BodyTextLabel}">
        <Setter Property="FontFamily" Value="{StaticResource HeaderFont}" />
        <Setter Property="Foreground" Value="{StaticResource SMMWhite}" />
        <Setter Property="FontSize" Value="{dynamic:FontScale 2}"/>
    </Style>

    <Style TargetType="Slider" x:Key="FlatSlider">
        <Setter Property="Background" Value="{StaticResource SMMLightGray}"/>
        <Setter Property="Foreground" Value="{StaticResource SMMBlueGray}"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="TickFrequency" Value="1"/>
        <Setter Property="IsSnapToTickEnabled" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Slider">
                    <Grid VerticalAlignment="Center">
                        <!-- Your flat track background -->
                        <Border
                            Height="10"
                            Background="{TemplateBinding Background}"
                            HorizontalAlignment="Stretch" />

                        <!-- Core track that wires up dragging -->
                        <Track
                            x:Name="PART_Track"
                            Minimum="{TemplateBinding Minimum}"
                            Maximum="{TemplateBinding Maximum}"
                            Value="{TemplateBinding Value}"
                            IsDirectionReversed="{TemplateBinding IsDirectionReversed}">
                            
                            <!-- “empty” buttons so there are no arrows -->
                            <Track.DecreaseRepeatButton>
                            <RepeatButton
                                Command="Slider.DecreaseLarge"
                                Style="{x:Null}"
                                IsTabStop="False"/>
                            </Track.DecreaseRepeatButton>

                            <Track.Thumb>
                            <Thumb
                                Width="16" Height="16"
                                Background="{TemplateBinding Foreground}"
                                BorderThickness="0"/>
                            </Track.Thumb>

                            <Track.IncreaseRepeatButton>
                            <RepeatButton
                                Command="Slider.IncreaseLarge"
                                Style="{x:Null}"
                                IsTabStop="False"/>
                            </Track.IncreaseRepeatButton>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>